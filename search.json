[
  {
    "objectID": "website/04_FunctionsAndParametersSpecification.html",
    "href": "website/04_FunctionsAndParametersSpecification.html",
    "title": "Model Functions and Parameters",
    "section": "",
    "text": "rtmbGMACS can encapsulate the following population- and observation-related processes in a model:\n\ninitial abundance\nallometry (weight-at-size)\nrecruitment\nnatural mortality\ngrowth\nmaturation\nsize-specific functions (e.g., selectivity and retention)\nfishing mortality\nsurvey catchability\nmovement (TBD?)\n\nEach of these processes can be included in the final model using selections among a number of possible functional forms, each with associated parameters defined using a hierarchical structure. In this hierarchical structure, “top-level” parameters can be fixed or estimated as fixed effects and time-variation can be added through annually-varying offsets (as fixed or random effects) which can, in turn, be linear functions of environmental covariates.",
    "crumbs": [
      "Functions and Parameters Specification"
    ]
  },
  {
    "objectID": "website/04_FunctionsAndParametersSpecification.html#model-processes-functions-and-parameters",
    "href": "website/04_FunctionsAndParametersSpecification.html#model-processes-functions-and-parameters",
    "title": "Model Functions and Parameters",
    "section": "",
    "text": "rtmbGMACS can encapsulate the following population- and observation-related processes in a model:\n\ninitial abundance\nallometry (weight-at-size)\nrecruitment\nnatural mortality\ngrowth\nmaturation\nsize-specific functions (e.g., selectivity and retention)\nfishing mortality\nsurvey catchability\nmovement (TBD?)\n\nEach of these processes can be included in the final model using selections among a number of possible functional forms, each with associated parameters defined using a hierarchical structure. In this hierarchical structure, “top-level” parameters can be fixed or estimated as fixed effects and time-variation can be added through annually-varying offsets (as fixed or random effects) which can, in turn, be linear functions of environmental covariates.",
    "crumbs": [
      "Functions and Parameters Specification"
    ]
  },
  {
    "objectID": "website/04_FunctionsAndParametersSpecification.html#ctl-file-syntax",
    "href": "website/04_FunctionsAndParametersSpecification.html#ctl-file-syntax",
    "title": "Model Functions and Parameters",
    "section": "CTL file syntax",
    "text": "CTL file syntax\nBoth functions and parameters for all processes are defined in the “CTL” file (the actual filename of which is arbitrary). The CTL file is a text file: comments follow a “#” symbol while function and parameter specifications are made using white space-delimited tables with a header line with column names and a final line specifying “END TABLE”. Sections defining individual processes are delimited by a line starting with the name of the process to be defined (e.g.  “RECRUITMENT”) and a line indicating the end of the process definition (e.g., “END RECRUITMENT”).\n\nFunction and parameter specification\nFunctions and parameters within a process definition section are defined using table structures that are read in as tibbles..\n\nFunctions\nFunction tables start a header line with a fcn_id column followed by other column names specific to the process being defined, ending with a label column. Rows following the header line specify the functions that combine to define the process for a specified time block and (possibly) combination of population classes. Table 1 provides an example table for the recruitment process.\n\n\n\nTable 1: Example table of function definitions for the recruitment process.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfcn_id\ntime_block\nsex\nsize_fcn\nmax size\nrec_type\nlabel\n\n\n\n\n1\n2001:2005\nall\ngamma\n50\nnoSR1\nbasic_rec\n\n\n2\n2006:2023\nmale\ngamma\n50\nnoSR1-RW\nmale_rec2006+\n\n\n3\n2006:2023\nfemale\ngamma\n45\nnoSR1-RW\nfemale_rec2006+\n\n\n\n\n\n\nIn the table, fcn_id provides a unique row reference to refer back to a function definition, time_block specifies the years to which the definition applies, sex specifies the sex to which it applies, etc. The columns fcn_id and label must be present in each function definition table, but otherwise the column names are specific to the process in question. Additionally, the columns may be in any order.\n\n\nParameters\nThe parameters associated with each function defined in the function definitions table are defined in a hierarchical set of tables either as\n\\[p_{t,c} = p_{t_{ref},c} + \\delta p_{t,c} + \\left[ \\sum_{e} \\alpha_{e} \\cdot v_{e,t} + \\beta_e \\right]  \\tag{1}\\]\nor\n\\[p_{t,c} = p_{t_{ref},c} + s \\cdot \\sum_{t'=t_{ref}+s}^t\\delta p_{t',c} + \\left[ \\sum_{e} \\alpha_{e} \\cdot v_{e,t} + \\beta_e \\right]  \\tag{2}\\]\nIn Equation 1, the \\(\\delta p_{t,c}\\) are annual offsets to \\(p_{t_{ref},c}\\) with \\(\\delta p_{t_{ref},c}=0\\) while \\(s\\) in Equation 2 is \\(sgn(t-t_{ref})\\) and the \\(\\delta p_{t,c}\\) are annual random walk innovations. The \\(\\delta p_{t,c}\\) can be either fixed or random effects. The effect of any environmental covariates is modeled as a sum over individual linear effects, the \\(\\alpha_{e}\\) and \\(\\alpha_{e}\\) are the (potentially) estimable fixed effects and \\(v_{e,t}\\) represents the value at time \\(t\\) of the e-th covariate.\n\nReference-level parameters\nThe reference-level parameters are defined in tables similar to Table 2, which is an example that defines the \\(\\alpha\\) and \\(\\beta\\) parameters for the recruitment-at-size gamma functions from Table 1.\n\n\n\nTable 2: Example table of reference-level parameters.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfcn_id\nparam\npar_id\nref_time\nscale\nunits\nival\nlb\nub\nphz\npr_type\np1\np2\noffsets\ncovars\nlabel\n\n\n\n\n1\nalpha\n1\nNA\nln\nnone\n9.33\n2.7\n56\n5\nnone\n0\n0\nno\ne1,e2\nalpha1\n\n\n1\nbeta\n2\n2001\nln\nnone\n3.86\n1\n3.9\n5\nnone\n0\n0\nyes\nNA\nbeta1\n\n\n2\nalpha\n3\n2006\nln\nnone\n9.33\n2.7\n56\n5\nnone\n0\n0\nno\ne1,e2\nalpha2\n\n\n2\nalpha\n4\n2011\nln\nnone\n9.33\n2.7\n56\n5\nnone\n0\n0\nyes\nNA\nalpha3\n\n\n2\nbeta\n5\n2006\nln\nnone\n3.86\n1\n3.9\n5\nnone\n0\n0\nno\nNA\nbeta2\n\n\n3\nalpha\n-3\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n3\nbeta\n-2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\n\n\n\nIn Table 2:\n\nfcn_id identifies a row in the function definition table\nparam identifies the name of the relevant parameter being specified\npar_id associates a unique positive integer with the parameter, or a negative value indicating substitution with the parameter associated with the positive value\nref_time identifies the reference time for parameters with a hierarchical structure\nscale indicates the scale used to specify the initial value, bounds, and prior (the values will be subsequently transformed as necessary to the scale used for the parameter in the model)\nunits indicates any units associated with the initial value, bounds, and prior\nival, lb, ub specify the initial value and lower and upper bounds\nphz identifies the estimation phase in which the parameter should be “turned on” (never estimated if &lt; 0)\npr_type specifies the prior probability function associated with the estimated parameter\np1,p2 specify parameter values for the prior\noffsets indicates whether annually-varying offset parameters (i.e., the \\(\\delta p_{t,c}\\)) should be associated with the reference parameter\ncovars specifies the covariates (if any) text string to associate with the reference parameter as a comma-delimited\nlabel specifies a specific label to use for the parameter\n\nThe columns may be in any order, but (unlike a function definition table) all columns should be present.\n\n\nParameter offsets\nIf parameter offsets are defined for any reference parameter, then a table defining these offsets needs to follow the table defining the reference parameters. The annually-varying parameter offsets (i.e., the \\(\\delta p_{t,c}\\)) are defined in tables similar to Table 3, which follows on from Table 2:\n\n\n\nTable 3: Example table of offset-level parameters.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npar_id\noff_id\ntime_block\nparam\nscale\nunits\nphz\noff_type\nRE\nival\npr_type\np1\np2\nlabel\n\n\n\n\n2\n1\n2001:2005\nbeta\nar\nnone\n5\noffset\nno\n0\nnormal\n0\n1\ndvs_beta\n\n\n4\n2\n2011:2023\nalpha\nar\nnone\n5\nRW\nno\n0\nnormal\n0\n1\nrw_alpha\n\n\n\n\n\n\nIn Table 3:\n\npar_id identifies a row in the reference parameters definition table\noff_id associates a unique positive integer with the parameter, or a negative value indicating substitution with the parameter associated with the positive value\ntime_block identifies the time block across which the offset parameters are defined\nparam indicates the name of the associated reference parameter (provides error checking; it should be redundant with par_id)\nscale indicates the scale used to specify the initial value, bounds, and prior (the values will be subsequently transformed as necessary to the scale used for the parameter in the model)\nunits indicates any units associated with the initial value, bounds, and prior\nphz identifies the estimation phase in which the parameter should be “turned on” (never estimated if &lt; 0)\noff_type identifies the offset type (“offset” or “RW”, implying Equation 1 or Equation 2)\nRE is a flag to regard the offsets as random effects\nival, lb, ub specify the initial value and lower and upper bounds (the latter two are not included in the example)\npr_type specifies the prior probability function associated with the estimated offsets\np1,p2 specify parameter values for the prior\nlabel specifies a specific label to use for the parameter\n\nThe columns may be in any order, but (unlike a function definition table) all columns should be present.\n\n\nCovariates\nIf covariates are defined for any reference parameter, then a table defining the associated parameters needs to follow the table(s) defining the reference parameters and any offset parameters. The annually-varying covariate effects (i.e., the \\(\\alpha_e \\cdot v_{e,t} + \\beta_e\\)) are defined for the reference parameters in tables similar to Table 4, which follows on from Table 2:\n\n\n\nTable 4: Example table of covariate-level parameters.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npar_id\ncov_id\ncovar\ntime_block\nparam\nscale\nunits\nphz\nRE\nival\npr_type\np1\np2\nlabel\n\n\n\n\n1\n1\ne1\n2001:2005\ncov_alpha\nar\nnone\n5\nno\n0\nnormal\n0\n1\ncov_alpha_e1\n\n\n1\n2\ne1\n2001:2005\ncov_beta\nar\nnone\n5\nno\n0\nnormal\n0\n1\ncov_beta_e1\n\n\n1\n3\ne2\n2001:2005\ncov_alpha\nar\nnone\n5\nno\n0\nnormal\n0\n1\ncov_alpha_e2\n\n\n1\n4\ne2\n2001:2005\ncov_beta\nar\nnone\n5\nno\n0\nnormal\n0\n1\ncov_beta_e2\n\n\n\n\n\n\nIn Table 4:\n\npar_id identifies a row in the reference parameters definition table\ncov_id associates a unique positive integer with the covariate parameter, or a negative value indicating substitution with the parameter associated with the positive value\ncovar indicates the name of the associated covariate\ntime_block identifies the time block across which the covariates are applied\nparam indicates the name of the covariate-level parameter\nscale indicates the scale used to specify the initial value, bounds, and prior (the values will be subsequently transformed as necessary to the scale used for the parameter in the model)\nunits indicates any units associated with the initial value, bounds, and prior\nphz identifies the estimation phase in which the parameter should be “turned on” (never estimated if &lt; 0)\nRE is a flag (yes/no) to regard the offsets as random effects\nival, lb, ub specify the initial value and lower and upper bounds (the latter two are not included in the example)\npr_type specifies the prior probability function associated with the estimated offsets\np1,p2 specify parameter values for the prior\nlabel specifies a specific label to use for the parameter",
    "crumbs": [
      "Functions and Parameters Specification"
    ]
  },
  {
    "objectID": "website/04_FunctionsAndParametersSpecification.html#sec-InitAbd",
    "href": "website/04_FunctionsAndParametersSpecification.html#sec-InitAbd",
    "title": "Model Functions and Parameters",
    "section": "Initial abundance",
    "text": "Initial abundance",
    "crumbs": [
      "Functions and Parameters Specification"
    ]
  },
  {
    "objectID": "website/04_FunctionsAndParametersSpecification.html#sec-Allom",
    "href": "website/04_FunctionsAndParametersSpecification.html#sec-Allom",
    "title": "Model Functions and Parameters",
    "section": "Allometry",
    "text": "Allometry",
    "crumbs": [
      "Functions and Parameters Specification"
    ]
  },
  {
    "objectID": "website/04_FunctionsAndParametersSpecification.html#sec-Rec",
    "href": "website/04_FunctionsAndParametersSpecification.html#sec-Rec",
    "title": "Model Functions and Parameters",
    "section": "Recruitment",
    "text": "Recruitment",
    "crumbs": [
      "Functions and Parameters Specification"
    ]
  },
  {
    "objectID": "website/04_FunctionsAndParametersSpecification.html#sec-NatM",
    "href": "website/04_FunctionsAndParametersSpecification.html#sec-NatM",
    "title": "Model Functions and Parameters",
    "section": "Natural mortality",
    "text": "Natural mortality",
    "crumbs": [
      "Functions and Parameters Specification"
    ]
  },
  {
    "objectID": "website/04_FunctionsAndParametersSpecification.html#sec-Grw",
    "href": "website/04_FunctionsAndParametersSpecification.html#sec-Grw",
    "title": "Model Functions and Parameters",
    "section": "Growth",
    "text": "Growth",
    "crumbs": [
      "Functions and Parameters Specification"
    ]
  },
  {
    "objectID": "website/04_FunctionsAndParametersSpecification.html#sec-Mat",
    "href": "website/04_FunctionsAndParametersSpecification.html#sec-Mat",
    "title": "Model Functions and Parameters",
    "section": "Maturity",
    "text": "Maturity",
    "crumbs": [
      "Functions and Parameters Specification"
    ]
  },
  {
    "objectID": "website/04_FunctionsAndParametersSpecification.html#sec-Sel",
    "href": "website/04_FunctionsAndParametersSpecification.html#sec-Sel",
    "title": "Model Functions and Parameters",
    "section": "Selectivity",
    "text": "Selectivity",
    "crumbs": [
      "Functions and Parameters Specification"
    ]
  },
  {
    "objectID": "website/04_FunctionsAndParametersSpecification.html#sec-FM",
    "href": "website/04_FunctionsAndParametersSpecification.html#sec-FM",
    "title": "Model Functions and Parameters",
    "section": "Fishing mortality",
    "text": "Fishing mortality",
    "crumbs": [
      "Functions and Parameters Specification"
    ]
  },
  {
    "objectID": "website/04_FunctionsAndParametersSpecification.html#sec-Srv",
    "href": "website/04_FunctionsAndParametersSpecification.html#sec-Srv",
    "title": "Model Functions and Parameters",
    "section": "Survey catchability",
    "text": "Survey catchability",
    "crumbs": [
      "Functions and Parameters Specification"
    ]
  },
  {
    "objectID": "website/02_PopDyMod.html",
    "href": "website/02_PopDyMod.html",
    "title": "Population Dynamcs Vignette",
    "section": "",
    "text": "The gmacs population model integrates the abundance of individuals in various discrete population categories over time based on assumptions regarding population processes consisting of recruitment, growth, maturation, natural mortality, and fishing mortality. Typical population categories might be sex and size, but it is possible to define an arbitrary number of categories (e.g., region, sex, maturity state, shell condition, and size). Although crustaceans cannot typically be aged, age could be included as a population category if population processes such as maturation were thought to have a strong age dependence.\nPopulation abundance in gmacs is represented as vector, \\(\\mathbf{n}\\), with elements \\(n_c\\), where \\(c\\) is a 1-dimensional index across the combination of population categories. The temporal nature of the population is represented by \\(\\mathbf{n}_t\\), a vector representing the abundance in each category at time \\(t\\) (i.e., a vector with elements \\(\\mathbf{n}_{t_c}\\)):\n\\[ \\frac{d\\mathbf{n}_t}{dt} = \\left[ \\mathbf{T}_t-(\\mathbf{M}_t+\\mathbf{F}_t) \\right]*\\mathbf{n}_t  \\tag{1}\\]\nwhere \\(\\mathbf{T}_t\\) is a \\(c\\) x \\(c\\) matrix representing transition rates between population categories (e.g., growth or movement) at time \\(t\\), \\(\\mathbf{M}_t\\) is a similarly-sized diagonal matrix representing natural mortality at time \\(t\\), and \\(\\mathbf{M}_t\\) is a similarly-sized diagonal matrix representing fishing mortality at time \\(t\\). For gmacs, individual time steps represent seasons within a year and rates within a time step are assumed to be constant. Thus, eq. 1 can be integrated to obtain\n\\[\\mathbf{n}_{n+1} = e^{\\mathbf{A}_t \\delta t_s}*\\mathbf{n}_t \\tag{2}\\]\nwhere \\(\\delta t_s\\) is the time step from \\(t\\) to \\(t+1\\) corresonding to season \\(s\\), and \\(\\mathbf{A}_t=\\left[ \\mathbf{T}_t-(\\mathbf{M}_t+\\mathbf{F}_t) \\right]\\). In practice, when \\(\\mathbf{T}_t\\) represents growth processes, these are regarded as discrete-time processes with a season length of zero, so that\n\\[ \\mathbf{n}_{t+1} = \\mathbf{T}_t \\cdot \\mathbf{n}_t  \\tag{3}\\]\nfor seasons in which growth occurs and\n\\[ \\mathbf{n}_{t+1} = e^{-\\left[ \\mathbf{M}_t+\\mathbf{F}_t \\right]\\cdot \\delta t} \\cdot \\mathbf{n}_t \\tag{4}\\]\nfor seasons with non-zero lengths in which mortality occurs.\nRecruitment, the addition of new individuals to the model population categories, is also considered a discrete-time process associated with a season of zero length, so\n\\[ \\mathbf{n_{t+1}} = \\mathbf{r}_t+\\mathbf{n}_t  \\tag{5}\\]\nwhen recruitment occurs, where \\(\\mathbf{r}_t\\) is a vector of length \\(c\\).\nAt an annual time step \\(y\\), the integration across \\(n_s\\) seasons \\(s\\) can be represented as\n\\[ \\mathbf{n}_{y+1,s=1} = \\{ \\prod_{s \\in {s_a}} \\mathbf{\\Lambda}_{y,s} \\} \\cdot \\{ \\mathbf{r}_y + \\cdot \\{ \\prod_{s \\in {s_b}} \\mathbf{\\Lambda}_{y,s} \\} \\cdot \\mathbf{n}_{y,s=1} \\} \\tag{6}\\]\nwhere \\(s_a\\) are seasons after recruitment occurs and \\(s_b\\) are seasons before recruitment occurs. This can be represented more compactly as\n\\[ \\mathbf{n_{y+1}} = \\mathfrak{\\mathbf{A}}_y \\cdot \\{\\mathbf{r}_y + \\mathfrak{\\mathbf{B}}_y \\cdot \\mathbf{n}_y \\} \\tag{7}\\]\nwhere the season subscript has been dropped (\\(s=1\\)) from the \\(\\mathbf{n}\\)’s.\nAssuming that the terms in Equation 7 can be replaced by equilibrium equivalents (e.g., appropriate longterm averages), the equilibrium population size structure \\(&lt;\\mathbf{n}&gt;\\) is given by\n\\[ &lt;\\mathbf{n}&gt; = [&lt;\\mathfrak{\\mathbf{A}}&gt;^{-1} - &lt;\\mathfrak{\\mathbf{B}}&gt;]^{-1} &lt;\\mathbf{r}&gt; \\tag{8}\\]\nwhere \\(&lt;  &gt;\\) is the expected value operator.",
    "crumbs": [
      "Population Dynamics"
    ]
  },
  {
    "objectID": "website/02_PopDyMod.html#population-model-description",
    "href": "website/02_PopDyMod.html#population-model-description",
    "title": "Population Dynamcs Vignette",
    "section": "",
    "text": "The gmacs population model integrates the abundance of individuals in various discrete population categories over time based on assumptions regarding population processes consisting of recruitment, growth, maturation, natural mortality, and fishing mortality. Typical population categories might be sex and size, but it is possible to define an arbitrary number of categories (e.g., region, sex, maturity state, shell condition, and size). Although crustaceans cannot typically be aged, age could be included as a population category if population processes such as maturation were thought to have a strong age dependence.\nPopulation abundance in gmacs is represented as vector, \\(\\mathbf{n}\\), with elements \\(n_c\\), where \\(c\\) is a 1-dimensional index across the combination of population categories. The temporal nature of the population is represented by \\(\\mathbf{n}_t\\), a vector representing the abundance in each category at time \\(t\\) (i.e., a vector with elements \\(\\mathbf{n}_{t_c}\\)):\n\\[ \\frac{d\\mathbf{n}_t}{dt} = \\left[ \\mathbf{T}_t-(\\mathbf{M}_t+\\mathbf{F}_t) \\right]*\\mathbf{n}_t  \\tag{1}\\]\nwhere \\(\\mathbf{T}_t\\) is a \\(c\\) x \\(c\\) matrix representing transition rates between population categories (e.g., growth or movement) at time \\(t\\), \\(\\mathbf{M}_t\\) is a similarly-sized diagonal matrix representing natural mortality at time \\(t\\), and \\(\\mathbf{M}_t\\) is a similarly-sized diagonal matrix representing fishing mortality at time \\(t\\). For gmacs, individual time steps represent seasons within a year and rates within a time step are assumed to be constant. Thus, eq. 1 can be integrated to obtain\n\\[\\mathbf{n}_{n+1} = e^{\\mathbf{A}_t \\delta t_s}*\\mathbf{n}_t \\tag{2}\\]\nwhere \\(\\delta t_s\\) is the time step from \\(t\\) to \\(t+1\\) corresonding to season \\(s\\), and \\(\\mathbf{A}_t=\\left[ \\mathbf{T}_t-(\\mathbf{M}_t+\\mathbf{F}_t) \\right]\\). In practice, when \\(\\mathbf{T}_t\\) represents growth processes, these are regarded as discrete-time processes with a season length of zero, so that\n\\[ \\mathbf{n}_{t+1} = \\mathbf{T}_t \\cdot \\mathbf{n}_t  \\tag{3}\\]\nfor seasons in which growth occurs and\n\\[ \\mathbf{n}_{t+1} = e^{-\\left[ \\mathbf{M}_t+\\mathbf{F}_t \\right]\\cdot \\delta t} \\cdot \\mathbf{n}_t \\tag{4}\\]\nfor seasons with non-zero lengths in which mortality occurs.\nRecruitment, the addition of new individuals to the model population categories, is also considered a discrete-time process associated with a season of zero length, so\n\\[ \\mathbf{n_{t+1}} = \\mathbf{r}_t+\\mathbf{n}_t  \\tag{5}\\]\nwhen recruitment occurs, where \\(\\mathbf{r}_t\\) is a vector of length \\(c\\).\nAt an annual time step \\(y\\), the integration across \\(n_s\\) seasons \\(s\\) can be represented as\n\\[ \\mathbf{n}_{y+1,s=1} = \\{ \\prod_{s \\in {s_a}} \\mathbf{\\Lambda}_{y,s} \\} \\cdot \\{ \\mathbf{r}_y + \\cdot \\{ \\prod_{s \\in {s_b}} \\mathbf{\\Lambda}_{y,s} \\} \\cdot \\mathbf{n}_{y,s=1} \\} \\tag{6}\\]\nwhere \\(s_a\\) are seasons after recruitment occurs and \\(s_b\\) are seasons before recruitment occurs. This can be represented more compactly as\n\\[ \\mathbf{n_{y+1}} = \\mathfrak{\\mathbf{A}}_y \\cdot \\{\\mathbf{r}_y + \\mathfrak{\\mathbf{B}}_y \\cdot \\mathbf{n}_y \\} \\tag{7}\\]\nwhere the season subscript has been dropped (\\(s=1\\)) from the \\(\\mathbf{n}\\)’s.\nAssuming that the terms in Equation 7 can be replaced by equilibrium equivalents (e.g., appropriate longterm averages), the equilibrium population size structure \\(&lt;\\mathbf{n}&gt;\\) is given by\n\\[ &lt;\\mathbf{n}&gt; = [&lt;\\mathfrak{\\mathbf{A}}&gt;^{-1} - &lt;\\mathfrak{\\mathbf{B}}&gt;]^{-1} &lt;\\mathbf{r}&gt; \\tag{8}\\]\nwhere \\(&lt;  &gt;\\) is the expected value operator.",
    "crumbs": [
      "Population Dynamics"
    ]
  },
  {
    "objectID": "website/01_Intro.html",
    "href": "website/01_Intro.html",
    "title": "Introduction",
    "section": "",
    "text": "The purpose of rtmbGMACS is to provide a population modeling framework for commercially-fished crustacean stocks. Stock assessment models developed using rtmbGMACS can be fit to fishery, survey, and biological data to estimate various population processes (e.g., recruitment, growth, and mortality) and population size in order to determine sustainable fishing limits and targets.\nHere, the modeling framework is referred to as “gmacs” while the R package is referred to “rtmbGMACS”. The R package provides functions to set up data inputs to a gmacs model, with associated likelihood functions, select functional forms for various population processes, define estimable parameters and associated priors or penalties, run the model, create plots and tables from a fitted model, and compare multiple models.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "website/01_Intro.html#software-architecture",
    "href": "website/01_Intro.html#software-architecture",
    "title": "Introduction",
    "section": "Software architecture",
    "text": "Software architecture\nThe rtmbGMACS R package allows the user to construct rather general size-structured population dynamics models, as well as “observation” models for predicting data values and associated likelihood functions to characterize model fit, define various characteristics (e.g., value, hyper parameters and prior probability function) of the resulting set of model parameters, calculate the population state and predict observations through time based on the parameter values, and calculate individual and total likelihood components.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "website/03_ModelDimensions.html",
    "href": "website/03_ModelDimensions.html",
    "title": "Model Dimensions",
    "section": "",
    "text": "Model dimensions consist of year (y), season (s), and a set of categories ({c}) into which the population is divided (e.g., sex and size). For a given year, population abundance is integrated across seasons within the year and different processes can occur in different seasons. Levels within a given population category can be nested within another category (e.g., different size classes might be defined for males and females if they exhibited substantially different growth patterns). Two types of model dimensions are distinguished: sparse and dense. A set of dimensions is characterized as sparse when different levels of one dimension are nested within the levels of another dimension such that the resulting set of levels has fewer members in it than the set of dimensions resulting from a complete crossing of all unique dimension levels. The latter set of (fully-crossed) dimensions is characterized as dense.\nOn the R side of things, a special dataframe (actually, a tibble) referred to as a “dimension map” is used to characterize any set of dimensions, either sparse or dense.The first column in the model dimensions map is simply the row number associated with the unique combination of dimension levels the row reflects. It also provides the index into the population abundance vector for that combination of dimensions (and thus allows the extraction of the associated dimension levels given the index value). The remaining columns correspond to individual dimensions; for each column, the value for each row is the level (as a factor) of the associated dimension. Rows are ordered by the combination of factor levels across the dimensions, with levels changing the fastest in the right-most column.\nA dimensions map also has three non-standard attributes: dmnms, dmlvs, and dmlns:\n\ndmnms is a character vector with the dimension names.\ndmlvs is a named list of character vectors comprising the unique levels for each dimension.\ndmlns is a named integer vector with the length (number of unique levels) of each dimension.\n\nGiven a sparse dimensions map, the corresponding dense map can be obtained by a full crossing of the levels in the sparse map’s dmlvs attribute.\nMost model quantities are represented as vectors, and thus have associated dimensions maps in order to be able to identify the dimension levels associated with each index value.\n\n\nSparse dimensions are defined using the R function createSparseDimsMap. As an example (Table 1), the following creates a set of dimensions encompassing year (y), season(s), sex (x), and size (z), with different size classes for males and females. Note that the “dimension name(s)” must be added as an attribute dmnms to the vector or list defining the levels.\n\n#&gt; Create the individual dimensions as vectors or lists (for nested dimensions)\n#&gt; --assign the attribute \"dmnms\", the dimension name(s) (plural if nested)\n#&gt; ----model years\nvYs = 2001:2005;                  attr(vYs,\"dmnms\")&lt;-\"y\";\n#&gt; ----model seasons\nvSs = c(\"fall\",\"spring\");         attr(vSs,\"dmnms\")&lt;-\"s\";\n#&gt; ----model sexes\nvXs = c(\"MALE\",\"FEMALE\");         attr(vXs,\"dmnms\")&lt;-\"x\";\n#&gt; ----model sizes, nested with sexes\nvZs = list(  MALE=seq(40,60,5),\n           FEMALE=seq(25,50,5));  attr(vZs,\"dmnms\")&lt;-c(\"x\",\"z\");\n#&gt;--create the dimensions \"map\"\ndmsSparse = createSparseDimsMap(y=vYs,s=vSs,x=vXs,z=vZs);\n\nv0: y \n     2001 2002 2003 2004 2005 \nv0: s \n     fall spring \nv0: x \n     MALE FEMALE \nv0: z \n\ndmsSparse |&gt; kableExtra::kbl(booktabs=TRUE,longtable=TRUE);\n\n\n\nTable 1: Example sparse dimensions map.\n\n\n\n\n\n\n\nsparse_idx\ny\ns\nx\nz\n\n\n\n\n1\n2001\nfall\nFEMALE\n25\n\n\n2\n2001\nfall\nFEMALE\n30\n\n\n3\n2001\nfall\nFEMALE\n35\n\n\n4\n2001\nfall\nFEMALE\n40\n\n\n5\n2001\nfall\nFEMALE\n45\n\n\n6\n2001\nfall\nFEMALE\n50\n\n\n7\n2001\nfall\nMALE\n40\n\n\n8\n2001\nfall\nMALE\n45\n\n\n9\n2001\nfall\nMALE\n50\n\n\n10\n2001\nfall\nMALE\n55\n\n\n11\n2001\nfall\nMALE\n60\n\n\n12\n2001\nspring\nFEMALE\n25\n\n\n13\n2001\nspring\nFEMALE\n30\n\n\n14\n2001\nspring\nFEMALE\n35\n\n\n15\n2001\nspring\nFEMALE\n40\n\n\n16\n2001\nspring\nFEMALE\n45\n\n\n17\n2001\nspring\nFEMALE\n50\n\n\n18\n2001\nspring\nMALE\n40\n\n\n19\n2001\nspring\nMALE\n45\n\n\n20\n2001\nspring\nMALE\n50\n\n\n21\n2001\nspring\nMALE\n55\n\n\n22\n2001\nspring\nMALE\n60\n\n\n23\n2002\nfall\nFEMALE\n25\n\n\n24\n2002\nfall\nFEMALE\n30\n\n\n25\n2002\nfall\nFEMALE\n35\n\n\n26\n2002\nfall\nFEMALE\n40\n\n\n27\n2002\nfall\nFEMALE\n45\n\n\n28\n2002\nfall\nFEMALE\n50\n\n\n29\n2002\nfall\nMALE\n40\n\n\n30\n2002\nfall\nMALE\n45\n\n\n31\n2002\nfall\nMALE\n50\n\n\n32\n2002\nfall\nMALE\n55\n\n\n33\n2002\nfall\nMALE\n60\n\n\n34\n2002\nspring\nFEMALE\n25\n\n\n35\n2002\nspring\nFEMALE\n30\n\n\n36\n2002\nspring\nFEMALE\n35\n\n\n37\n2002\nspring\nFEMALE\n40\n\n\n38\n2002\nspring\nFEMALE\n45\n\n\n39\n2002\nspring\nFEMALE\n50\n\n\n40\n2002\nspring\nMALE\n40\n\n\n41\n2002\nspring\nMALE\n45\n\n\n42\n2002\nspring\nMALE\n50\n\n\n43\n2002\nspring\nMALE\n55\n\n\n44\n2002\nspring\nMALE\n60\n\n\n45\n2003\nfall\nFEMALE\n25\n\n\n46\n2003\nfall\nFEMALE\n30\n\n\n47\n2003\nfall\nFEMALE\n35\n\n\n48\n2003\nfall\nFEMALE\n40\n\n\n49\n2003\nfall\nFEMALE\n45\n\n\n50\n2003\nfall\nFEMALE\n50\n\n\n51\n2003\nfall\nMALE\n40\n\n\n52\n2003\nfall\nMALE\n45\n\n\n53\n2003\nfall\nMALE\n50\n\n\n54\n2003\nfall\nMALE\n55\n\n\n55\n2003\nfall\nMALE\n60\n\n\n56\n2003\nspring\nFEMALE\n25\n\n\n57\n2003\nspring\nFEMALE\n30\n\n\n58\n2003\nspring\nFEMALE\n35\n\n\n59\n2003\nspring\nFEMALE\n40\n\n\n60\n2003\nspring\nFEMALE\n45\n\n\n61\n2003\nspring\nFEMALE\n50\n\n\n62\n2003\nspring\nMALE\n40\n\n\n63\n2003\nspring\nMALE\n45\n\n\n64\n2003\nspring\nMALE\n50\n\n\n65\n2003\nspring\nMALE\n55\n\n\n66\n2003\nspring\nMALE\n60\n\n\n67\n2004\nfall\nFEMALE\n25\n\n\n68\n2004\nfall\nFEMALE\n30\n\n\n69\n2004\nfall\nFEMALE\n35\n\n\n70\n2004\nfall\nFEMALE\n40\n\n\n71\n2004\nfall\nFEMALE\n45\n\n\n72\n2004\nfall\nFEMALE\n50\n\n\n73\n2004\nfall\nMALE\n40\n\n\n74\n2004\nfall\nMALE\n45\n\n\n75\n2004\nfall\nMALE\n50\n\n\n76\n2004\nfall\nMALE\n55\n\n\n77\n2004\nfall\nMALE\n60\n\n\n78\n2004\nspring\nFEMALE\n25\n\n\n79\n2004\nspring\nFEMALE\n30\n\n\n80\n2004\nspring\nFEMALE\n35\n\n\n81\n2004\nspring\nFEMALE\n40\n\n\n82\n2004\nspring\nFEMALE\n45\n\n\n83\n2004\nspring\nFEMALE\n50\n\n\n84\n2004\nspring\nMALE\n40\n\n\n85\n2004\nspring\nMALE\n45\n\n\n86\n2004\nspring\nMALE\n50\n\n\n87\n2004\nspring\nMALE\n55\n\n\n88\n2004\nspring\nMALE\n60\n\n\n89\n2005\nfall\nFEMALE\n25\n\n\n90\n2005\nfall\nFEMALE\n30\n\n\n91\n2005\nfall\nFEMALE\n35\n\n\n92\n2005\nfall\nFEMALE\n40\n\n\n93\n2005\nfall\nFEMALE\n45\n\n\n94\n2005\nfall\nFEMALE\n50\n\n\n95\n2005\nfall\nMALE\n40\n\n\n96\n2005\nfall\nMALE\n45\n\n\n97\n2005\nfall\nMALE\n50\n\n\n98\n2005\nfall\nMALE\n55\n\n\n99\n2005\nfall\nMALE\n60\n\n\n100\n2005\nspring\nFEMALE\n25\n\n\n101\n2005\nspring\nFEMALE\n30\n\n\n102\n2005\nspring\nFEMALE\n35\n\n\n103\n2005\nspring\nFEMALE\n40\n\n\n104\n2005\nspring\nFEMALE\n45\n\n\n105\n2005\nspring\nFEMALE\n50\n\n\n106\n2005\nspring\nMALE\n40\n\n\n107\n2005\nspring\nMALE\n45\n\n\n108\n2005\nspring\nMALE\n50\n\n\n109\n2005\nspring\nMALE\n55\n\n\n110\n2005\nspring\nMALE\n60\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a sparse dimensions map dmsSparse, the associated dense map can be created using the R function createFullDimsMap:\n\n\n\n\nTable 2: Example dense dimensions map (first 20 rows) corrseponding to the previous sparse dimensions map.\n\n\n\n\n\n\n\ndense_idx\ny\ns\nx\nz\n\n\n\n\n1\n2001\nfall\nFEMALE\n25\n\n\n2\n2001\nfall\nFEMALE\n30\n\n\n3\n2001\nfall\nFEMALE\n35\n\n\n4\n2001\nfall\nFEMALE\n40\n\n\n5\n2001\nfall\nFEMALE\n45\n\n\n6\n2001\nfall\nFEMALE\n50\n\n\n7\n2001\nfall\nFEMALE\n55\n\n\n8\n2001\nfall\nFEMALE\n60\n\n\n9\n2001\nfall\nMALE\n25\n\n\n10\n2001\nfall\nMALE\n30\n\n\n11\n2001\nfall\nMALE\n35\n\n\n12\n2001\nfall\nMALE\n40\n\n\n13\n2001\nfall\nMALE\n45\n\n\n14\n2001\nfall\nMALE\n50\n\n\n15\n2001\nfall\nMALE\n55\n\n\n16\n2001\nfall\nMALE\n60\n\n\n17\n2001\nspring\nFEMALE\n25\n\n\n18\n2001\nspring\nFEMALE\n30\n\n\n19\n2001\nspring\nFEMALE\n35\n\n\n20\n2001\nspring\nFEMALE\n40\n\n\n\n\n\n\n\n\n\n\n\nIn the above example, the size (number of rows) of the resulting dense dimensions map (160) is larger than that of the nested dimensions map (110) because of the different size bins defined for males and females.",
    "crumbs": [
      "Model Dimensions"
    ]
  },
  {
    "objectID": "website/03_ModelDimensions.html#model-dimensions",
    "href": "website/03_ModelDimensions.html#model-dimensions",
    "title": "Model Dimensions",
    "section": "",
    "text": "Model dimensions consist of year (y), season (s), and a set of categories ({c}) into which the population is divided (e.g., sex and size). For a given year, population abundance is integrated across seasons within the year and different processes can occur in different seasons. Levels within a given population category can be nested within another category (e.g., different size classes might be defined for males and females if they exhibited substantially different growth patterns). Two types of model dimensions are distinguished: sparse and dense. A set of dimensions is characterized as sparse when different levels of one dimension are nested within the levels of another dimension such that the resulting set of levels has fewer members in it than the set of dimensions resulting from a complete crossing of all unique dimension levels. The latter set of (fully-crossed) dimensions is characterized as dense.\nOn the R side of things, a special dataframe (actually, a tibble) referred to as a “dimension map” is used to characterize any set of dimensions, either sparse or dense.The first column in the model dimensions map is simply the row number associated with the unique combination of dimension levels the row reflects. It also provides the index into the population abundance vector for that combination of dimensions (and thus allows the extraction of the associated dimension levels given the index value). The remaining columns correspond to individual dimensions; for each column, the value for each row is the level (as a factor) of the associated dimension. Rows are ordered by the combination of factor levels across the dimensions, with levels changing the fastest in the right-most column.\nA dimensions map also has three non-standard attributes: dmnms, dmlvs, and dmlns:\n\ndmnms is a character vector with the dimension names.\ndmlvs is a named list of character vectors comprising the unique levels for each dimension.\ndmlns is a named integer vector with the length (number of unique levels) of each dimension.\n\nGiven a sparse dimensions map, the corresponding dense map can be obtained by a full crossing of the levels in the sparse map’s dmlvs attribute.\nMost model quantities are represented as vectors, and thus have associated dimensions maps in order to be able to identify the dimension levels associated with each index value.\n\n\nSparse dimensions are defined using the R function createSparseDimsMap. As an example (Table 1), the following creates a set of dimensions encompassing year (y), season(s), sex (x), and size (z), with different size classes for males and females. Note that the “dimension name(s)” must be added as an attribute dmnms to the vector or list defining the levels.\n\n#&gt; Create the individual dimensions as vectors or lists (for nested dimensions)\n#&gt; --assign the attribute \"dmnms\", the dimension name(s) (plural if nested)\n#&gt; ----model years\nvYs = 2001:2005;                  attr(vYs,\"dmnms\")&lt;-\"y\";\n#&gt; ----model seasons\nvSs = c(\"fall\",\"spring\");         attr(vSs,\"dmnms\")&lt;-\"s\";\n#&gt; ----model sexes\nvXs = c(\"MALE\",\"FEMALE\");         attr(vXs,\"dmnms\")&lt;-\"x\";\n#&gt; ----model sizes, nested with sexes\nvZs = list(  MALE=seq(40,60,5),\n           FEMALE=seq(25,50,5));  attr(vZs,\"dmnms\")&lt;-c(\"x\",\"z\");\n#&gt;--create the dimensions \"map\"\ndmsSparse = createSparseDimsMap(y=vYs,s=vSs,x=vXs,z=vZs);\n\nv0: y \n     2001 2002 2003 2004 2005 \nv0: s \n     fall spring \nv0: x \n     MALE FEMALE \nv0: z \n\ndmsSparse |&gt; kableExtra::kbl(booktabs=TRUE,longtable=TRUE);\n\n\n\nTable 1: Example sparse dimensions map.\n\n\n\n\n\n\n\nsparse_idx\ny\ns\nx\nz\n\n\n\n\n1\n2001\nfall\nFEMALE\n25\n\n\n2\n2001\nfall\nFEMALE\n30\n\n\n3\n2001\nfall\nFEMALE\n35\n\n\n4\n2001\nfall\nFEMALE\n40\n\n\n5\n2001\nfall\nFEMALE\n45\n\n\n6\n2001\nfall\nFEMALE\n50\n\n\n7\n2001\nfall\nMALE\n40\n\n\n8\n2001\nfall\nMALE\n45\n\n\n9\n2001\nfall\nMALE\n50\n\n\n10\n2001\nfall\nMALE\n55\n\n\n11\n2001\nfall\nMALE\n60\n\n\n12\n2001\nspring\nFEMALE\n25\n\n\n13\n2001\nspring\nFEMALE\n30\n\n\n14\n2001\nspring\nFEMALE\n35\n\n\n15\n2001\nspring\nFEMALE\n40\n\n\n16\n2001\nspring\nFEMALE\n45\n\n\n17\n2001\nspring\nFEMALE\n50\n\n\n18\n2001\nspring\nMALE\n40\n\n\n19\n2001\nspring\nMALE\n45\n\n\n20\n2001\nspring\nMALE\n50\n\n\n21\n2001\nspring\nMALE\n55\n\n\n22\n2001\nspring\nMALE\n60\n\n\n23\n2002\nfall\nFEMALE\n25\n\n\n24\n2002\nfall\nFEMALE\n30\n\n\n25\n2002\nfall\nFEMALE\n35\n\n\n26\n2002\nfall\nFEMALE\n40\n\n\n27\n2002\nfall\nFEMALE\n45\n\n\n28\n2002\nfall\nFEMALE\n50\n\n\n29\n2002\nfall\nMALE\n40\n\n\n30\n2002\nfall\nMALE\n45\n\n\n31\n2002\nfall\nMALE\n50\n\n\n32\n2002\nfall\nMALE\n55\n\n\n33\n2002\nfall\nMALE\n60\n\n\n34\n2002\nspring\nFEMALE\n25\n\n\n35\n2002\nspring\nFEMALE\n30\n\n\n36\n2002\nspring\nFEMALE\n35\n\n\n37\n2002\nspring\nFEMALE\n40\n\n\n38\n2002\nspring\nFEMALE\n45\n\n\n39\n2002\nspring\nFEMALE\n50\n\n\n40\n2002\nspring\nMALE\n40\n\n\n41\n2002\nspring\nMALE\n45\n\n\n42\n2002\nspring\nMALE\n50\n\n\n43\n2002\nspring\nMALE\n55\n\n\n44\n2002\nspring\nMALE\n60\n\n\n45\n2003\nfall\nFEMALE\n25\n\n\n46\n2003\nfall\nFEMALE\n30\n\n\n47\n2003\nfall\nFEMALE\n35\n\n\n48\n2003\nfall\nFEMALE\n40\n\n\n49\n2003\nfall\nFEMALE\n45\n\n\n50\n2003\nfall\nFEMALE\n50\n\n\n51\n2003\nfall\nMALE\n40\n\n\n52\n2003\nfall\nMALE\n45\n\n\n53\n2003\nfall\nMALE\n50\n\n\n54\n2003\nfall\nMALE\n55\n\n\n55\n2003\nfall\nMALE\n60\n\n\n56\n2003\nspring\nFEMALE\n25\n\n\n57\n2003\nspring\nFEMALE\n30\n\n\n58\n2003\nspring\nFEMALE\n35\n\n\n59\n2003\nspring\nFEMALE\n40\n\n\n60\n2003\nspring\nFEMALE\n45\n\n\n61\n2003\nspring\nFEMALE\n50\n\n\n62\n2003\nspring\nMALE\n40\n\n\n63\n2003\nspring\nMALE\n45\n\n\n64\n2003\nspring\nMALE\n50\n\n\n65\n2003\nspring\nMALE\n55\n\n\n66\n2003\nspring\nMALE\n60\n\n\n67\n2004\nfall\nFEMALE\n25\n\n\n68\n2004\nfall\nFEMALE\n30\n\n\n69\n2004\nfall\nFEMALE\n35\n\n\n70\n2004\nfall\nFEMALE\n40\n\n\n71\n2004\nfall\nFEMALE\n45\n\n\n72\n2004\nfall\nFEMALE\n50\n\n\n73\n2004\nfall\nMALE\n40\n\n\n74\n2004\nfall\nMALE\n45\n\n\n75\n2004\nfall\nMALE\n50\n\n\n76\n2004\nfall\nMALE\n55\n\n\n77\n2004\nfall\nMALE\n60\n\n\n78\n2004\nspring\nFEMALE\n25\n\n\n79\n2004\nspring\nFEMALE\n30\n\n\n80\n2004\nspring\nFEMALE\n35\n\n\n81\n2004\nspring\nFEMALE\n40\n\n\n82\n2004\nspring\nFEMALE\n45\n\n\n83\n2004\nspring\nFEMALE\n50\n\n\n84\n2004\nspring\nMALE\n40\n\n\n85\n2004\nspring\nMALE\n45\n\n\n86\n2004\nspring\nMALE\n50\n\n\n87\n2004\nspring\nMALE\n55\n\n\n88\n2004\nspring\nMALE\n60\n\n\n89\n2005\nfall\nFEMALE\n25\n\n\n90\n2005\nfall\nFEMALE\n30\n\n\n91\n2005\nfall\nFEMALE\n35\n\n\n92\n2005\nfall\nFEMALE\n40\n\n\n93\n2005\nfall\nFEMALE\n45\n\n\n94\n2005\nfall\nFEMALE\n50\n\n\n95\n2005\nfall\nMALE\n40\n\n\n96\n2005\nfall\nMALE\n45\n\n\n97\n2005\nfall\nMALE\n50\n\n\n98\n2005\nfall\nMALE\n55\n\n\n99\n2005\nfall\nMALE\n60\n\n\n100\n2005\nspring\nFEMALE\n25\n\n\n101\n2005\nspring\nFEMALE\n30\n\n\n102\n2005\nspring\nFEMALE\n35\n\n\n103\n2005\nspring\nFEMALE\n40\n\n\n104\n2005\nspring\nFEMALE\n45\n\n\n105\n2005\nspring\nFEMALE\n50\n\n\n106\n2005\nspring\nMALE\n40\n\n\n107\n2005\nspring\nMALE\n45\n\n\n108\n2005\nspring\nMALE\n50\n\n\n109\n2005\nspring\nMALE\n55\n\n\n110\n2005\nspring\nMALE\n60\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGiven a sparse dimensions map dmsSparse, the associated dense map can be created using the R function createFullDimsMap:\n\n\n\n\nTable 2: Example dense dimensions map (first 20 rows) corrseponding to the previous sparse dimensions map.\n\n\n\n\n\n\n\ndense_idx\ny\ns\nx\nz\n\n\n\n\n1\n2001\nfall\nFEMALE\n25\n\n\n2\n2001\nfall\nFEMALE\n30\n\n\n3\n2001\nfall\nFEMALE\n35\n\n\n4\n2001\nfall\nFEMALE\n40\n\n\n5\n2001\nfall\nFEMALE\n45\n\n\n6\n2001\nfall\nFEMALE\n50\n\n\n7\n2001\nfall\nFEMALE\n55\n\n\n8\n2001\nfall\nFEMALE\n60\n\n\n9\n2001\nfall\nMALE\n25\n\n\n10\n2001\nfall\nMALE\n30\n\n\n11\n2001\nfall\nMALE\n35\n\n\n12\n2001\nfall\nMALE\n40\n\n\n13\n2001\nfall\nMALE\n45\n\n\n14\n2001\nfall\nMALE\n50\n\n\n15\n2001\nfall\nMALE\n55\n\n\n16\n2001\nfall\nMALE\n60\n\n\n17\n2001\nspring\nFEMALE\n25\n\n\n18\n2001\nspring\nFEMALE\n30\n\n\n19\n2001\nspring\nFEMALE\n35\n\n\n20\n2001\nspring\nFEMALE\n40\n\n\n\n\n\n\n\n\n\n\n\nIn the above example, the size (number of rows) of the resulting dense dimensions map (160) is larger than that of the nested dimensions map (110) because of the different size bins defined for males and females.",
    "crumbs": [
      "Model Dimensions"
    ]
  },
  {
    "objectID": "website/03_ModelDimensions.html#aggregating-over-model-dimensions",
    "href": "website/03_ModelDimensions.html#aggregating-over-model-dimensions",
    "title": "Model Dimensions",
    "section": "Aggregating over model dimensions",
    "text": "Aggregating over model dimensions\nData fit in gmacs typically represent quantities aggregated over some combination of population categories, so it is necessary to determine the mapping from model indices to data indices. The function createAggregatorMap provides the required mapping of 1-d indices from one dimensions map to another, as illustrated in the following example (Table 3) using the dimensions map dmsDense from the previous example:\n\n#&gt; Example of how to create an aggregator map using \"dmsDense\" from above\n#&gt; to aggregate by year (y) and sex (x) over season (s) and size (z). \n#&gt;    Create dimensions map with only y and x\n  aggDims = keepDims(dmsDense,keep=c(\"y\",\"x\"));#--keeps only y and x dimensions, recreates 1-d vector index\n#&gt;    Create aggregator map from y,x,s,z to y,x\n  aggMap  = createAggregatorMap(dmsDense,aggDims,keepOrigDims=TRUE);\n\nidx_to is the vector index for aggMap, idx_from is the vector index for dmsDense.\n\n\n\n\nTable 3: Example aggregator map (from indices idx_frm to indices idx_to).\n\n\n\n\n\n\n\nidx_to\nidx_from\ny\ns\nx\nz\n\n\n\n\n1\n1\n2001\nfall\nFEMALE\n25\n\n\n1\n2\n2001\nfall\nFEMALE\n30\n\n\n1\n3\n2001\nfall\nFEMALE\n35\n\n\n1\n4\n2001\nfall\nFEMALE\n40\n\n\n1\n5\n2001\nfall\nFEMALE\n45\n\n\n1\n6\n2001\nfall\nFEMALE\n50\n\n\n1\n7\n2001\nfall\nFEMALE\n55\n\n\n1\n8\n2001\nfall\nFEMALE\n60\n\n\n2\n9\n2001\nfall\nMALE\n25\n\n\n2\n10\n2001\nfall\nMALE\n30\n\n\n2\n11\n2001\nfall\nMALE\n35\n\n\n2\n12\n2001\nfall\nMALE\n40\n\n\n2\n13\n2001\nfall\nMALE\n45\n\n\n2\n14\n2001\nfall\nMALE\n50\n\n\n2\n15\n2001\nfall\nMALE\n55\n\n\n2\n16\n2001\nfall\nMALE\n60\n\n\n1\n17\n2001\nspring\nFEMALE\n25\n\n\n1\n18\n2001\nspring\nFEMALE\n30\n\n\n1\n19\n2001\nspring\nFEMALE\n35\n\n\n1\n20\n2001\nspring\nFEMALE\n40\n\n\n1\n21\n2001\nspring\nFEMALE\n45\n\n\n1\n22\n2001\nspring\nFEMALE\n50\n\n\n1\n23\n2001\nspring\nFEMALE\n55\n\n\n1\n24\n2001\nspring\nFEMALE\n60\n\n\n2\n25\n2001\nspring\nMALE\n25\n\n\n2\n26\n2001\nspring\nMALE\n30\n\n\n2\n27\n2001\nspring\nMALE\n35\n\n\n2\n28\n2001\nspring\nMALE\n40\n\n\n2\n29\n2001\nspring\nMALE\n45\n\n\n2\n30\n2001\nspring\nMALE\n50\n\n\n2\n31\n2001\nspring\nMALE\n55\n\n\n2\n32\n2001\nspring\nMALE\n60\n\n\n3\n33\n2002\nfall\nFEMALE\n25\n\n\n3\n34\n2002\nfall\nFEMALE\n30\n\n\n3\n35\n2002\nfall\nFEMALE\n35\n\n\n3\n36\n2002\nfall\nFEMALE\n40\n\n\n3\n37\n2002\nfall\nFEMALE\n45\n\n\n3\n38\n2002\nfall\nFEMALE\n50\n\n\n3\n39\n2002\nfall\nFEMALE\n55\n\n\n3\n40\n2002\nfall\nFEMALE\n60\n\n\n4\n41\n2002\nfall\nMALE\n25\n\n\n4\n42\n2002\nfall\nMALE\n30\n\n\n4\n43\n2002\nfall\nMALE\n35\n\n\n4\n44\n2002\nfall\nMALE\n40\n\n\n4\n45\n2002\nfall\nMALE\n45\n\n\n4\n46\n2002\nfall\nMALE\n50\n\n\n4\n47\n2002\nfall\nMALE\n55\n\n\n4\n48\n2002\nfall\nMALE\n60\n\n\n3\n49\n2002\nspring\nFEMALE\n25\n\n\n3\n50\n2002\nspring\nFEMALE\n30\n\n\n3\n51\n2002\nspring\nFEMALE\n35\n\n\n3\n52\n2002\nspring\nFEMALE\n40\n\n\n3\n53\n2002\nspring\nFEMALE\n45\n\n\n3\n54\n2002\nspring\nFEMALE\n50\n\n\n3\n55\n2002\nspring\nFEMALE\n55\n\n\n3\n56\n2002\nspring\nFEMALE\n60\n\n\n4\n57\n2002\nspring\nMALE\n25\n\n\n4\n58\n2002\nspring\nMALE\n30\n\n\n4\n59\n2002\nspring\nMALE\n35\n\n\n4\n60\n2002\nspring\nMALE\n40\n\n\n4\n61\n2002\nspring\nMALE\n45\n\n\n4\n62\n2002\nspring\nMALE\n50\n\n\n4\n63\n2002\nspring\nMALE\n55\n\n\n4\n64\n2002\nspring\nMALE\n60\n\n\n5\n65\n2003\nfall\nFEMALE\n25\n\n\n5\n66\n2003\nfall\nFEMALE\n30\n\n\n5\n67\n2003\nfall\nFEMALE\n35\n\n\n5\n68\n2003\nfall\nFEMALE\n40\n\n\n5\n69\n2003\nfall\nFEMALE\n45\n\n\n5\n70\n2003\nfall\nFEMALE\n50\n\n\n5\n71\n2003\nfall\nFEMALE\n55\n\n\n5\n72\n2003\nfall\nFEMALE\n60\n\n\n6\n73\n2003\nfall\nMALE\n25\n\n\n6\n74\n2003\nfall\nMALE\n30\n\n\n6\n75\n2003\nfall\nMALE\n35\n\n\n6\n76\n2003\nfall\nMALE\n40\n\n\n6\n77\n2003\nfall\nMALE\n45\n\n\n6\n78\n2003\nfall\nMALE\n50\n\n\n6\n79\n2003\nfall\nMALE\n55\n\n\n6\n80\n2003\nfall\nMALE\n60\n\n\n5\n81\n2003\nspring\nFEMALE\n25\n\n\n5\n82\n2003\nspring\nFEMALE\n30\n\n\n5\n83\n2003\nspring\nFEMALE\n35\n\n\n5\n84\n2003\nspring\nFEMALE\n40\n\n\n5\n85\n2003\nspring\nFEMALE\n45\n\n\n5\n86\n2003\nspring\nFEMALE\n50\n\n\n5\n87\n2003\nspring\nFEMALE\n55\n\n\n5\n88\n2003\nspring\nFEMALE\n60\n\n\n6\n89\n2003\nspring\nMALE\n25\n\n\n6\n90\n2003\nspring\nMALE\n30\n\n\n6\n91\n2003\nspring\nMALE\n35\n\n\n6\n92\n2003\nspring\nMALE\n40\n\n\n6\n93\n2003\nspring\nMALE\n45\n\n\n6\n94\n2003\nspring\nMALE\n50\n\n\n6\n95\n2003\nspring\nMALE\n55\n\n\n6\n96\n2003\nspring\nMALE\n60\n\n\n7\n97\n2004\nfall\nFEMALE\n25\n\n\n7\n98\n2004\nfall\nFEMALE\n30\n\n\n7\n99\n2004\nfall\nFEMALE\n35\n\n\n7\n100\n2004\nfall\nFEMALE\n40\n\n\n7\n101\n2004\nfall\nFEMALE\n45\n\n\n7\n102\n2004\nfall\nFEMALE\n50\n\n\n7\n103\n2004\nfall\nFEMALE\n55\n\n\n7\n104\n2004\nfall\nFEMALE\n60\n\n\n8\n105\n2004\nfall\nMALE\n25\n\n\n8\n106\n2004\nfall\nMALE\n30\n\n\n8\n107\n2004\nfall\nMALE\n35\n\n\n8\n108\n2004\nfall\nMALE\n40\n\n\n8\n109\n2004\nfall\nMALE\n45\n\n\n8\n110\n2004\nfall\nMALE\n50\n\n\n8\n111\n2004\nfall\nMALE\n55\n\n\n8\n112\n2004\nfall\nMALE\n60\n\n\n7\n113\n2004\nspring\nFEMALE\n25\n\n\n7\n114\n2004\nspring\nFEMALE\n30\n\n\n7\n115\n2004\nspring\nFEMALE\n35\n\n\n7\n116\n2004\nspring\nFEMALE\n40\n\n\n7\n117\n2004\nspring\nFEMALE\n45\n\n\n7\n118\n2004\nspring\nFEMALE\n50\n\n\n7\n119\n2004\nspring\nFEMALE\n55\n\n\n7\n120\n2004\nspring\nFEMALE\n60\n\n\n8\n121\n2004\nspring\nMALE\n25\n\n\n8\n122\n2004\nspring\nMALE\n30\n\n\n8\n123\n2004\nspring\nMALE\n35\n\n\n8\n124\n2004\nspring\nMALE\n40\n\n\n8\n125\n2004\nspring\nMALE\n45\n\n\n8\n126\n2004\nspring\nMALE\n50\n\n\n8\n127\n2004\nspring\nMALE\n55\n\n\n8\n128\n2004\nspring\nMALE\n60\n\n\n9\n129\n2005\nfall\nFEMALE\n25\n\n\n9\n130\n2005\nfall\nFEMALE\n30\n\n\n9\n131\n2005\nfall\nFEMALE\n35\n\n\n9\n132\n2005\nfall\nFEMALE\n40\n\n\n9\n133\n2005\nfall\nFEMALE\n45\n\n\n9\n134\n2005\nfall\nFEMALE\n50\n\n\n9\n135\n2005\nfall\nFEMALE\n55\n\n\n9\n136\n2005\nfall\nFEMALE\n60\n\n\n10\n137\n2005\nfall\nMALE\n25\n\n\n10\n138\n2005\nfall\nMALE\n30\n\n\n10\n139\n2005\nfall\nMALE\n35\n\n\n10\n140\n2005\nfall\nMALE\n40\n\n\n10\n141\n2005\nfall\nMALE\n45\n\n\n10\n142\n2005\nfall\nMALE\n50\n\n\n10\n143\n2005\nfall\nMALE\n55\n\n\n10\n144\n2005\nfall\nMALE\n60\n\n\n9\n145\n2005\nspring\nFEMALE\n25\n\n\n9\n146\n2005\nspring\nFEMALE\n30\n\n\n9\n147\n2005\nspring\nFEMALE\n35\n\n\n9\n148\n2005\nspring\nFEMALE\n40\n\n\n9\n149\n2005\nspring\nFEMALE\n45\n\n\n9\n150\n2005\nspring\nFEMALE\n50\n\n\n9\n151\n2005\nspring\nFEMALE\n55\n\n\n9\n152\n2005\nspring\nFEMALE\n60\n\n\n10\n153\n2005\nspring\nMALE\n25\n\n\n10\n154\n2005\nspring\nMALE\n30\n\n\n10\n155\n2005\nspring\nMALE\n35\n\n\n10\n156\n2005\nspring\nMALE\n40\n\n\n10\n157\n2005\nspring\nMALE\n45\n\n\n10\n158\n2005\nspring\nMALE\n50\n\n\n10\n159\n2005\nspring\nMALE\n55\n\n\n10\n160\n2005\nspring\nMALE\n60",
    "crumbs": [
      "Model Dimensions"
    ]
  }
]