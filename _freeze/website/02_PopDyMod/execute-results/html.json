{
  "hash": "c3ba74966b71e11a8c752ecfc67953c5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Population Dynamcs Vignette\"\ncrossref: \n  fig-title: Figure\n  tbl-title: Table\ncomment: \"#>\"\ncollapse: true\ntoc: true\nformat: \n  html: \n    html-math-method: mathjax\ntbl-cap-location: top\nfig-cap-location: bottom\n#prefer-html: true\nkeep-md: false\nkeep-yaml: false\n---\n\n\n\n\n\n\n## Population model description \n\nThe gmacs population model integrates the abundance of individuals in various discrete \npopulation categories over time based on assumptions regarding population processes consisting of recruitment, growth, maturation, \nnatural mortality, and fishing mortality. Typical population categories might be sex and size, but it is possible to define an arbitrary number of categories (e.g., region, sex, maturity state, shell condition, and size). Although crustaceans cannot typically be aged, age could be included as a population category if population processes such as maturation were thought to have a strong age dependence.\n\nPopulation abundance in gmacs is represented as vector, $\\mathbf{n}$, with elements $n_c$, where $c$ is \na 1-dimensional index across the combination of population categories. The temporal nature \nof the population is represented by $\\mathbf{n}_t$, a vector representing the abundance in each category at time $t$ (i.e., a vector with elements $\\mathbf{n}_{t_c}$):\n\n$$ \\frac{d\\mathbf{n}_t}{dt} = \\left[ \\mathbf{T}_t-(\\mathbf{M}_t+\\mathbf{F}_t) \\right]*\\mathbf{n}_t $$ {#eq-1}\n\n\nwhere $\\mathbf{T}_t$ is a $c$ x $c$ matrix representing transition rates between population categories (e.g., growth or movement) at time $t$, $\\mathbf{M}_t$ is a similarly-sized diagonal matrix representing natural mortality at time $t$, and $\\mathbf{M}_t$ is a similarly-sized diagonal matrix representing fishing mortality at time $t$. For gmacs, individual time steps represent seasons within a year and rates within a time step are assumed to be constant. Thus, eq. [-@eq-1] can be integrated to obtain\n\n$$\\mathbf{n}_{n+1} = e^{\\mathbf{A}_t \\delta t_s}*\\mathbf{n}_t$$ {#eq-2}\n \nwhere $\\delta t_s$ is the time step from $t$ to $t+1$ corresonding to season $s$, and $\\mathbf{A}_t=\\left[ \\mathbf{T}_t-(\\mathbf{M}_t+\\mathbf{F}_t) \\right]$. In practice, when $\\mathbf{T}_t$ represents growth processes, these are regarded as discrete-time processes with a season length of zero, so that \n\n$$ \\mathbf{n}_{t+1} = \\mathbf{T}_t \\cdot \\mathbf{n}_t $$ {#eq-3}\n \nfor seasons in which growth occurs and \n\n$$ \\mathbf{n}_{t+1} = e^{-\\left[ \\mathbf{M}_t+\\mathbf{F}_t \\right]\\cdot \\delta t} \\cdot \\mathbf{n}_t$$ {#eq-4}\n\nfor seasons with non-zero lengths in which mortality occurs.\n\nRecruitment, the addition of new individuals to the model population categories, is also considered a discrete-time process associated with a season of zero length, so \n\n$$ \\mathbf{n_{t+1}} = \\mathbf{r}_t+\\mathbf{n}_t $$ {#eq-5}\n\nwhen recruitment occurs, where $\\mathbf{r}_t$ is a vector of length $c$.\n\nAt an annual time step $y$, the integration across $n_s$ seasons $s$ can be represented as \n\n$$ \\mathbf{n}_{y+1,s=1} = \\{ \\prod_{s \\in {s_a}} \\mathbf{\\Lambda}_{y,s} \\} \\cdot \\{ \\mathbf{r}_y + \\cdot \\{ \\prod_{s \\in {s_b}} \\mathbf{\\Lambda}_{y,s} \\} \\cdot \\mathbf{n}_{y,s=1} \\}$$ {#eq-6}\n\nwhere $s_a$ are seasons after recruitment occurs and $s_b$ are seasons before recruitment occurs. This can be represented more compactly as \n\n$$ \\mathbf{n_{y+1}} = \\mathfrak{\\mathbf{A}}_y \\cdot \\{\\mathbf{r}_y + \\mathfrak{\\mathbf{B}}_y \\cdot \\mathbf{n}_y \\}$$ {#eq-7}\n\nwhere the season subscript has been dropped ($s=1$) from the $\\mathbf{n}$'s. \n\nAssuming that the terms in @eq-7 can be replaced by equilibrium equivalents (e.g., appropriate longterm averages), the equilibrium population size structure $<\\mathbf{n}>$ is given by \n\n$$ <\\mathbf{n}> = [<\\mathfrak{\\mathbf{A}}>^{-1} - <\\mathfrak{\\mathbf{B}}>]^{-1} <\\mathbf{r}>$$ {#eq-eq_soln}\n\nwhere $<  >$ is the expected value operator.\n\n",
    "supporting": [
      "02_PopDyMod_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}